# .github/workflows/build-and-push-anycable-go.yml
name: Build and Push AnyCable‑Go

on:
  push:
    branches:
      - '*'
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'

permissions:
  id-token: write
  contents: read

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
      CGO_ENABLED: "1"
      GOFLAGS: "-mod=vendor"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup repo variables
        run: |
          echo "REPO_NAME=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV
          echo "ECR_REPO_NAME=$(echo ${GITHUB_REPOSITORY#*/} | tr '_' '-')" >> $GITHUB_ENV

      - name: Determine artifact tag (main → latest)
        if: github.ref == 'refs/heads/main'
        run: echo "ARTIFACT_TAG=latest" >> $GITHUB_ENV

      - name: Determine artifact tag (branches/tags)
        if: github.ref != 'refs/heads/main' && !startsWith(github.ref, 'refs/heads/dependabot/')
        run: echo "ARTIFACT_TAG=${{ github.ref_name }}" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.BUILD_ARTIFACTS_AWS_ACCOUNT_ID }}:role/github-build-ecr-s3-${{ env.REPO_NAME }}
          aws-region: ca-central-1
          role-session-name: ${{ env.REPO_NAME }}-build

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y bison zip

      - name: Cache Go vendor
        uses: actions/cache@v4
        with:
          path: vendor
          key: vendor-${{ hashFiles('**/go.sum') }}
          restore-keys: vendor-

      - name: Vendor modules
        run: go mod vendor

      - name: Install Ruby (for MRuby build)
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7
          bundler-cache: true

      - name: Build MRuby
        run: |
          cd vendor/github.com/mitchellh/go-mruby
          MRUBY_CONFIG=../../../../../../etc/build_config.rb make libmruby.a

      - name: Prepare binary output dir
        run: mkdir -p docker/linux/amd64

      - name: Build AnyCable‑Go (mrb)
        run: |
          env GOOS=linux GOARCH=amd64 CGO_ENABLED=1 \
            go build -tags mrb \
            -ldflags "-s -w \
              -X github.com/anycable/anycable-go/version.version=${{ env.ARTIFACT_TAG }} \
              -X github.com/anycable/anycable-go/version.sha=$(echo \"$GITHUB_SHA\" | cut -c -7)" \
            -o docker/linux/amd64/anycable-go \
            cmd/anycable-go/main.go

      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Build & push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/Dockerfile.mrb-linux-amd64
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPO_NAME }}:${{ env.ARTIFACT_TAG }}
            ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPO_NAME }}:${{ github.sha }}

      - name: Create build zip
        if: ${{ !startsWith(github.ref, 'refs/heads/dependabot/') }}
        run: |
          zip -r "${REPO_NAME}-${GITHUB_SHA}.zip" infrastructure/ scripts/

      - name: Upload build zip to S3
        if: ${{ !startsWith(github.ref, 'refs/heads/dependabot/') }}
        run: |
          echo "${GITHUB_SHA}" > "${REPO_NAME}-${ARTIFACT_TAG}.txt"
          aws s3 cp "${REPO_NAME}-${ARTIFACT_TAG}.txt" s3://${{ secrets.BUILD_S3_ARTIFACTS_BUCKET }}/${REPO_NAME}/
          aws s3 cp "${REPO_NAME}-${GITHUB_SHA}.zip"    s3://${{ secrets.BUILD_S3_ARTIFACTS_BUCKET }}/${REPO_NAME}/
